services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - open-webui:/app/backend/data
    networks:
      - private_network
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.open-webui.rule=Host(`${OPEN_WEBUI_DOMAIN}`)"
      - "traefik.http.routers.open-webui.entrypoints=websecure"
      - "traefik.http.routers.open-webui.service=open-webui"
      - "traefik.http.services.open-webui.loadbalancer.server.port=8080"

  searxng:
    image: searxng/searxng:${SEARXNG_VERSION:-latest}
    container_name: searxng
    volumes:
      - ./searxng:/etc/searxng
    restart: always
    networks:
      - private_network
    labels:
      - "traefik.enable=false"

  pipelines:
    image: ghcr.io/open-webui/pipelines:main
    container_name: pipelines
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - pipelines:/app/pipelines
    networks:
      - private_network
    labels:
      - "traefik.enable=false"

  langfuse:
    image: langfuse/langfuse:2
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${LANGFUSE_DATABASE_URL:-postgresql://postgres:postgres@db:5432/langfuse}
      - NEXTAUTH_SECRET=${LANGFUSE_SECRET}
      - SALT=${LANGFUSE_SALT}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - HOSTNAME=0.0.0.0
      - AUTH_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - AUTH_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - AUTH_GOOGLE_ALLOW_ACCOUNT_LINKING=${OAUTH_MERGE_ACCOUNTS_BY_EMAIL}
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-false}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
    networks:
      - private_network
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.langfuse.rule=Host(`${LANGFUSE_DOMAIN}`)"
      - "traefik.http.routers.langfuse.entrypoints=websecure"
      - "traefik.http.routers.langfuse.service=langfuse"
      - "traefik.http.services.langfuse.loadbalancer.server.port=3000"

  db:
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - database-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - private_network
    labels:
      - "traefik.enable=false"

networks:
  proxy:
    external: true
  private_network:
    driver: bridge

volumes:
  open-webui:
  pipelines:
  database-data:

